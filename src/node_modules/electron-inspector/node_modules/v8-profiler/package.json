{
  "_args": [
    [
      {
        "raw": "v8-profiler@git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
        "scope": null,
        "escapedName": "v8-profiler",
        "name": "v8-profiler",
        "rawSpec": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
        "spec": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
          "sshUrl": "git+ssh://git@github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
          "httpsUrl": "git+https://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
          "gitUrl": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
          "shortcut": "github:enlight/v8-profiler#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
          "directUrl": "https://raw.githubusercontent.com/enlight/v8-profiler/dc3a4e15f06dd6eaca705e69e235d21d5962eaf5/package.json"
        }
      },
      "/Users/mohseenmukaddam/Projects/Level_Up_Desktop/src/node_modules/electron-inspector"
    ]
  ],
  "_from": "enlight/v8-profiler#v5.6.5-electron-v1.3",
  "_id": "v8-profiler@5.6.5",
  "_inCache": true,
  "_location": "/electron-inspector/v8-profiler",
  "_phantomChildren": {},
  "_requested": {
    "raw": "v8-profiler@git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
    "scope": null,
    "escapedName": "v8-profiler",
    "name": "v8-profiler",
    "rawSpec": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
    "spec": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
      "sshUrl": "git+ssh://git@github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
      "httpsUrl": "git+https://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
      "gitUrl": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
      "shortcut": "github:enlight/v8-profiler#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
      "directUrl": "https://raw.githubusercontent.com/enlight/v8-profiler/dc3a4e15f06dd6eaca705e69e235d21d5962eaf5/package.json"
    }
  },
  "_requiredBy": [
    "/electron-inspector",
    "/electron-inspector/node-inspector"
  ],
  "_resolved": "git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
  "_shasum": "2831ee341a2372b6214e7cab6ffb004fac857034",
  "_shrinkwrap": null,
  "_spec": "v8-profiler@git://github.com/enlight/v8-profiler.git#dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
  "_where": "/Users/mohseenmukaddam/Projects/Level_Up_Desktop/src/node_modules/electron-inspector",
  "author": {
    "name": "Danny Coates",
    "email": "dannycoates@gmail.com"
  },
  "binary": {
    "module_name": "profiler",
    "module_path": "./build/{module_name}/v{version}/{node_abi}-{platform}-{arch}/",
    "remote_path": "./{module_name}/v{version}/",
    "package_name": "{node_abi}-{platform}-{arch}.tar.gz",
    "host": "https://node-inspector.s3.amazonaws.com/"
  },
  "bugs": {
    "url": "https://github.com/node-inspector/v8-profiler/issues"
  },
  "contributors": [
    {
      "name": "Miroslav BajtoÅ¡"
    },
    {
      "name": "3y3",
      "email": "3y3@bk.ru"
    }
  ],
  "dependencies": {
    "nan": "^2.3.2",
    "node-pre-gyp": "^0.6.5"
  },
  "description": "node bindings for the v8 profiler",
  "devDependencies": {
    "aws-sdk": "^2.0.0",
    "chai": "^1.9.1",
    "co": "^4.6.0",
    "mocha": "^1.20.1",
    "rimraf": "^2.4.4"
  },
  "engines": {
    "node": ">=0.10"
  },
  "gitHead": "dc3a4e15f06dd6eaca705e69e235d21d5962eaf5",
  "homepage": "http://github.com/node-inspector/v8-profiler",
  "keywords": [
    "profiler",
    "inspector"
  ],
  "license": "BSD-2-Clause",
  "main": "v8-profiler",
  "name": "v8-profiler",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/node-inspector/v8-profiler.png?branch=master)](http://travis-ci.org/node-inspector/v8-profiler)\n[![Build status](https://ci.appveyor.com/api/projects/status/hhgloy5smkl5i8fd/branch/master?svg=true)](https://ci.appveyor.com/project/3y3/v8-profiler/branch/master)\n[![npm version](https://badge.fury.io/js/v8-profiler.svg)](http://badge.fury.io/js/v8-profiler)\n\nv8-profiler provides [node](http://github.com/ry/node) bindings for the v8\nprofiler and integration with [node-inspector](http://github.com/dannycoates/node-inspector)\n\n## Installation\n```sh\nnpm install v8-profiler\n```\n## Usage\n```js\nvar profiler = require('v8-profiler');\n```\n## API\n`takeSnapshot([name])` - returns new HEAP Snapshot instance. `name` is optional argument, by default snapshot name will be constructed from his uid.\n\n`deleteAllSnapshots()` - works as described in name.\n\n```js\nvar snapshot1 = profiler.takeSnapshot('1');\nvar snapshot2 = profiler.takeSnapshot();\nprofiler.deleteAllSnapshots();\n```\n\n`startProfiling([name], [recsamples])` - start CPU profiling. `name` is optional argument, by default profile name will be constructed from his uid. `recsamples` is true by default.\n\n`stopProfiling([name])` - returns new CPU Profile instance. There is no strictly described behavior for usage without `name` argument.\n\n`setSamplingInterval([num])` - Changes default CPU profiler sampling interval to the specified number of microseconds. Default interval is 1000us. This method must be called when there are no profiles being recorded. If called without arguments it resets interval to default.\n\n`deleteAllProfiles()` - works as described in name.\n\n```js\nprofiler.startProfiling('', true);\nsetTimeout(function() {\n  var profile = profiler.stopProfiling('');\n  profiler.deleteAllProfiles();\n}, 1000);\n```\n\n### HEAP Snapshot API\n`Snapshot.getHeader()` - provides short information about snapshot.\n\n`Snapshot.compare(snapshot)` - creates HEAP diff for two snapshots.\n\n`Snapshot.delete()` - removes snapshot from memory.\n\n`Snapshot.export([callback])` - provides simple export API for snapshot. `callback(error, data)` receives serialized snapshot as second argument. (Serialization is not equal to `JSON.stringify` result).\n\nIf callback will not be passed, `export` returns transform stream.\n\n`Snapshot.serialize` - low level serialization method. Look `Snapshot.export` source for usage example.\n\n```js\nvar fs = require('fs');\nvar profiler = require('v8-profiler');\nvar snapshot1 = profiler.takeSnapshot();\nvar snapshot2 = profiler.takeSnapshot();\n\nconsole.log(snapshot1.getHeader(), snapshot2.getHeader());\n\nconsole.log(snapshot1.compare(snapshot2));\n\n// Export snapshot to file file\nsnapshot1.export(function(error, result) {\n  fs.writeFileSync('snapshot1.json', result);\n  snapshot1.delete();\n});\n\n// Export snapshot to file stream\nsnapshot2.export()\n  .pipe(fs.createWriteStream('snapshot2.json'))\n  .on('finish', snapshot2.delete);\n```\n\n## CPU Profile API\n`Profile.getHeader()` - provides short information about profile.\n\n`Profile.delete()` - removes profile from memory.\n\n`Profile.export([callback])` - provides simple export API for profile. `callback(error, data)` receives serialized profile as second argument. (Serialization is equal to `JSON.stringify` result).\n\n```js\nvar fs = require('fs');\nvar profiler = require('v8-profiler');\nprofiler.startProfiling('1', true);\nvar profile1 = profiler.stopProfiling();\nprofiler.startProfiling('2', true);\nvar profile2 = profiler.stopProfiling();\n\nconsole.log(snapshot1.getHeader(), snapshot2.getHeader());\n\nprofile1.export(function(error, result) {\n  fs.writeFileSync('profile1.json', result);\n  profile1.delete();\n});\n\nprofile2.export()\n  .pipe(fs.createWriteStream('profile2.json'))\n  .on('finish', function() {\n    profile2.delete();\n  });\n```\n\n## node-inspector\n\nCpu profiles can be viewed and heap snapshots may be taken and viewed from the\nprofiles panel.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-inspector/v8-profiler.git"
  },
  "scripts": {
    "install": "node-pre-gyp install --fallback-to-build",
    "preinstall": "node -e 'process.exit(0)'",
    "rebuild": "node-pre-gyp rebuild",
    "release": "node ./tools/release.js $@",
    "test": "mocha --debug"
  },
  "version": "5.6.5"
}
